// ===============================================
// COMPONENTE: Link (Enlace t√°ctil reutilizable)
// Archivo: components/Link/index.tsx
// Este componente define un texto presionable, similar a un enlace (link),
// usado para navegar o ejecutar acciones secundarias (por ejemplo: ‚ÄúVolver al login‚Äù).
// ===============================================

// Importamos componentes base de React Native
import { Pressable, Text, StyleSheet } from "react-native";

// Importamos utilidades del proyecto
import { colors } from "../../utils";
import { materialColors } from "../../utils/colors";

// ===============================================
// INTERFAZ DE PROPIEDADES (TypeScript)
// ===============================================
//
// Define qu√© datos recibe el componente:
// - link: texto que se mostrar√° como enlace (por ejemplo, "Volver al login!").
// - onPress: funci√≥n que se ejecuta cuando el usuario toca el texto.
//
interface IProps {
  link: string;
  onPress: () => void;
}

// ===============================================
// COMPONENTE PRINCIPAL: Link
// ===============================================
//
// Este componente es una versi√≥n simplificada de un bot√≥n,
// con apariencia de texto y estilo similar a un hiperv√≠nculo.
//
export default function Link(props: IProps) {
  // Desestructuramos las props para usarlas directamente
  const { link, onPress } = props;

  // Renderizado visual del enlace
  return (
    // Pressable detecta el toque del usuario (como TouchableOpacity, pero m√°s moderno)
    <Pressable onPress={onPress}>
      {/* Texto con estilo de link */}
      <Text style={styles.text}>{link}</Text>
    </Pressable>
  );
}

// ===============================================
// ESTILOS
// ===============================================
const styles = StyleSheet.create({
  // Estilo base del texto del link
  text: {
    color: materialColors.schemes.light.tertiary, // color del esquema claro (tono de acento)
  },
});

// ===============================================
// EXPLICACI√ìN GENERAL (para defensa oral)
// ===============================================
//
// üîπ Este componente representa un enlace o texto interactivo,
//    ideal para acciones secundarias como:
//    - ‚ÄúVolver al login‚Äù
//    - ‚Äú¬øOlvidaste tu contrase√±a?‚Äù
//    - ‚ÄúRegistrate aqu√≠‚Äù
//
// FUNCIONAMIENTO:
//
// 1Ô∏è‚É£ Usa `Pressable` ‚Üí detecta pulsaciones (m√°s eficiente que TouchableOpacity).
// 2Ô∏è‚É£ Muestra un `Text` con el contenido que recibe por la prop `link`.
// 3Ô∏è‚É£ Ejecuta la funci√≥n `onPress` cuando el usuario toca el texto.
// 4Ô∏è‚É£ Usa un color del sistema `materialColors` para mantener coherencia visual.
//
// CONCEPTOS CLAVE:
//
// - Reutilizaci√≥n: permite usar el mismo componente en varias pantallas,
//   cambiando solo el texto y la acci√≥n.
//
// - Props: recibe el texto (`link`) y la funci√≥n (`onPress`) desde el padre.
//
// - Dise√±o simple y accesible: ideal para pantallas de autenticaci√≥n.
//
// FUTURAS MEJORAS:
//
// - Agregar subrayado o efecto hover cuando se presiona.
// - Permitir pasar estilos personalizados como prop opcional.
// - Cambiar el color autom√°ticamente seg√∫n el tema (oscuro o claro).
//
// OBJETIVO EN LA DEFENSA:
//
// Explicar que este componente fue creado para evitar repetir c√≥digo,
// brindar consistencia visual en los enlaces,
// y usar buenas pr√°cticas de componentes reutilizables y tipados.
//
